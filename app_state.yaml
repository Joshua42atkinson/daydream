# Daydream Application State & Tool Manifest
# Version: 3.0.0-diamond-body
# This file defines the application's states and the tools available within each state.
# It is used by the state manager to orchestrate complex, autonomous workflows.

version: 3.0.0-diamond-body
entry_point: MainMenu

states:
  MainMenu:
    description: "The primary entry point for the Daydream application. Provides options for project management and system configuration."
    ui_view: "views::main_menu"
    available_tools:
      - id: "project.create_new_module"
        description: "Initiates the creation of a new instructional design module from a template or a blank slate."
        agent_handler: "ProjectAgent"
        parameters:
          - name: "module_name"
            type: "string"
            description: "The title of the new instructional module."
          - name: "template"
            type: "enum"
            options: [] # No options defined in original
            description: "The starting template for the module."
        on_success_transition_to: "CreatorCockpit"

      - id: "project.load_module"
        description: "Loads an existing instructional design module from the local filesystem for editing."
        agent_handler: "ProjectAgent"
        parameters:
          - name: "module_path"
            type: "path"
            description: "The file path to the module's root directory."
        on_success_transition_to: "CreatorCockpit"

      - id: "system.view_settings"
        description: "Navigates to the system-wide settings and configuration panel."
        agent_handler: "SystemAgent"
        parameters: []
        on_success_transition_to: "Settings"

      - id: "system.view_diagnostics"
        description: "Accesses the hardware performance and diagnostics dashboard."
        agent_handler: "SystemAgent"
        parameters: []
        on_success_transition_to: "SystemDiagnostics"

      - id: "system.exit"
        description: "Closes the Daydream application."
        agent_handler: "SystemAgent"
        parameters: []
        on_success_transition_to: "TERMINATE"

  CreatorCockpit:
    description: "The central hub for managing and editing a loaded instructional module. Provides access to all creator tools."
    ui_view: "views::creator_cockpit"
    available_tools:
      - id: "editor.open_narrative_editor"
        description: "Opens the primary editor for writing and structuring the module's narrative, quests, and character interactions."
        agent_handler: "EditorAgent"
        parameters: []
        on_success_transition_to: "ModuleEditor"

      - id: "editor.open_agent_config"
        description: "Opens the configuration panel for tuning the behavior of the AI agents used in the module."
        agent_handler: "EditorAgent"
        parameters: []
        on_success_transition_to: "AgentConfiguration"

      - id: "project.save_module"
        description: "Saves all current changes to the instructional module."
        agent_handler: "ProjectAgent"
        parameters: []
        on_success_transition_to: "CreatorCockpit"

      - id: "project.close_module"
        description: "Closes the current module and returns to the main menu."
        agent_handler: "ProjectAgent"
        parameters: []
        on_success_transition_to: "MainMenu"

  ModuleEditor:
    description: "A detailed editor for constructing the gameducation experience. Includes tools for quests, learning objectives, and reflection."
    ui_view: "views::module_editor"
    available_tools:
      - id: "module.edit_quest_graph"
        description: "Visually edit the quest structure, including objectives, triggers, and completion conditions."
        agent_handler: "QuestAgent"
        parameters:
          - name: "quest_id"
            type: "string"
            description: "The unique identifier for the quest to be edited."
        on_success_transition_to: "ModuleEditor"

      - id: "module.define_learning_objectives"
        description: "Create and manage the trackable learning objectives for the module (e.g., vocabulary, compliance items, historical facts)."
        agent_handler: "LearningObjectiveAgent"
        parameters:
          - name: "objective_id"
            type: "string"
            description: "The unique identifier for the learning objective."
          - name: "mastery_criteria"
            type: "struct"
            description: "Defines the conditions for mastering the objective (e.g., 'encountered: 3', 'applied_in_scenario: 1')."
        on_success_transition_to: "ModuleEditor"

      - id: "module.configure_reflection_loop"
        description: "Configure the 'AI as a Mirror' feature by setting triggers for Reflection Quests and authoring Socratic prompt templates."
        agent_handler: "ReflectionAgent"
        parameters:
          - name: "trigger_condition"
            type: "string"
            description: "The game state event that initiates a reflection (e.g., 'on_quest_complete:q1', 'on_player_choice:c5')."
          - name: "prompt_template"
            type: "string"
            description: "A template for the AI to generate a Socratic question, e.g., 'After that choice, what personal belief influenced your decision?'"
        on_success_transition_to: "ModuleEditor"

      - id: "editor.return_to_cockpit"
        description: "Returns to the main creator cockpit view."
        agent_handler: "EditorAgent"
        parameters: []
        on_success_transition_to: "CreatorCockpit"

  AgentConfiguration:
    description: "Interface for configuring the underlying AI models and agent personalities."
    ui_view: "views::agent_config"
    available_tools:
      - id: "agent.set_narrative_persona"
        description: "Select or define the personality of the primary storyteller AI."
        agent_handler: "NarrativeAgent"
        parameters:
          - name: "persona"
            type: "enum"
            options: [] # No options defined in original
            description: "The AI personality to use for narrative generation."
        on_success_transition_to: "AgentConfiguration"

      - id: "agent.set_inference_parameters"
        description: "Adjust low-level inference parameters like temperature, top_p, and repetition penalty for the selected LLM."
        agent_handler: "InferenceAgent"
        parameters:
          - name: "temperature"
            type: "float"
            range: [0.0, 2.0]
          - name: "top_p"
            type: "float"
            range: [0.0, 1.0]
        on_success_transition_to: "AgentConfiguration"

      - id: "editor.return_to_cockpit"
        description: "Returns to the main creator cockpit view."
        agent_handler: "EditorAgent"
        parameters: []
        on_success_transition_to: "CreatorCockpit"

  SystemDiagnostics:
    description: "Provides tools for monitoring and tuning the performance of the local-first AI hardware."
    ui_view: "views::diagnostics"
    available_tools:
      - id: "system.monitor_hardware_utilization"
        description: "Displays real-time usage graphs for the Zen 5 CPU cores, Radeon 8060S iGPU, and XDNA 2 NPU."
        agent_handler: "SystemAgent"
        parameters: []
        on_success_transition_to: "SystemDiagnostics"

      - id: "system.set_vram_allocation"
        description: "Adjusts the amount of unified LPDDR5X RAM allocated as VRAM for the iGPU. Requires a restart."
        agent_handler: "SystemAgent"
        parameters:
          - name: "vram_gb"
            type: "integer"
            range: [] # No range defined in original
            description: "The amount of system RAM in gigabytes to allocate to the GPU."
        on_success_transition_to: "SystemDiagnostics"

      - id: "system.toggle_npu_offload"
        description: "Enables or disables experimental offloading of specific AI workloads to the 50 TOPS XDNA 2 NPU for power efficiency."
        agent_handler: "InferenceAgent"
        parameters:
          - name: "npu_enabled"
            type: "boolean"
        on_success_transition_to: "SystemDiagnostics"

      - id: "system.return_to_main_menu"
        description: "Returns to the main menu."
        agent_handler: "SystemAgent"
        parameters: []
        on_success_transition_to: "MainMenu"

  Settings:
    description: "Global settings for the Daydream application, including model management and updates."
    ui_view: "views::settings"
    available_tools:
      - id: "inference.manage_local_models"
        description: "Download, update, or remove local LLM models (GGUF format) for offline use."
        agent_handler: "InferenceAgent"
        parameters:
          - name: "action"
            type: "enum"
            options: ["pull", "remove", "list"]
          - name: "model_name"
            type: "string"
            description: "The name of the model to act upon (e.g., 'llama3.1-8b-instruct.Q4_K_M.gguf')."
        on_success_transition_to: "Settings"

      - id: "system.check_for_updates"
        description: "Checks the open-source repository for new versions of the Daydream engine."
        agent_handler: "SystemAgent"
        parameters: []
        on_success_transition_to: "Settings"

      - id: "system.return_to_main_menu"
        description: "Returns to the main menu."
        agent_handler: "SystemAgent"
        parameters: []
        on_success_transition_to: "MainMenu"